#!/usr/bin/env python

#  Copyright 2019 Jeremy Schulman, nwkautomaniac@gmail.com
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import sys
import fire
import toml

from clos_db import TwoStageL3ClosDB

import loopback_ips
import fabric_ips
import cabling
import topology
import asn_values
import vlans
import vlan_assignments
import hostvars


class Builder(object):

    build_list = [
        'topology', 'cabling',
        'loopback-ips', 'fabric-ips', 'asn-values',
        'vlans', 'vlan-assignments',
        'hostvars'
    ]

    def __init__(self):
        self.config = toml.load(open('config.toml'))
        self.name = self.config['name']
        self.db = TwoStageL3ClosDB(db_name=self.name, password='admin123')

    def quiet(self):
        return ''

    def reset(self):
        print("Reset database: {} ... ".format(self.name), end='')
        self.db.reset_database()
        print("OK")
        return self

    def topology(self):
        topology.ensure(clos=self)
        return self

    def cabling(self):
        cabling.ensure(clos=self)
        return self

    def loopback_ips(self):
        loopback_ips.ensure(clos=self)
        return self

    def fabric_ips(self):
        fabric_ips.ensure(clos=self)
        return self

    def asn_values(self):
        asn_values.ensure(clos=self)
        return self

    def vlans(self):
        vlans.ensure(self.db, self.config)
        return self

    def vlan_assignments(self):
        vlan_assignments.ensure(self.db, self.config)
        return self

    def hostvars(self):
        for dev in self.db.devices:
            hostvars.save(dev['name'], self.db)
        return self


if __name__ == "__main__":

    if len(sys.argv) == 1:      # no specific build options, so build the complete list
        sys.argv.extend(Builder.build_list)

    sys.argv.append('quiet')
    fire.Fire(Builder)
